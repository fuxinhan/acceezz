{"version":3,"file":"static/js/869.3e93fbae.chunk.js","mappings":"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","sources":["webpack://webapp/./src/Page/Highlights/index.module.css?d003","Page/Highlights/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"highlightsContainer\":\"Highlights_highlightsContainer__1mN6T\",\"header\":\"Highlights_header__AwU6e\",\"title\":\"Highlights_title__PhCvw\",\"subtitle\":\"Highlights_subtitle__x5G57\",\"carouselContainer\":\"Highlights_carouselContainer__ZNEi+\",\"carouselWrapper\":\"Highlights_carouselWrapper__Of+TT\",\"carouselTrack\":\"Highlights_carouselTrack__S4Bja\",\"carouselSlide\":\"Highlights_carouselSlide__TLnxl\",\"slideContent\":\"Highlights_slideContent__frMQg\",\"slideImage\":\"Highlights_slideImage__8fVWe\",\"slideText\":\"Highlights_slideText__jCm6E\",\"slideTitle\":\"Highlights_slideTitle__LxSU8\",\"slideDescription\":\"Highlights_slideDescription__WLU5j\",\"carouselDots\":\"Highlights_carouselDots__b51F1\",\"dot\":\"Highlights_dot__uglQJ\",\"activeDot\":\"Highlights_activeDot__rcfYj\",\"carouselNav\":\"Highlights_carouselNav__pHR6k\",\"prevNav\":\"Highlights_prevNav__cJxmB\",\"nextNav\":\"Highlights_nextNav__uDvpv\",\"propertyCard\":\"Highlights_propertyCard__04SUS\",\"imageContainer\":\"Highlights_imageContainer__edSMN\",\"secondRow\":\"Highlights_secondRow__hfVf6\",\"navigationButton\":\"Highlights_navigationButton__tng4v\",\"prevButton\":\"Highlights_prevButton__RDEuP\",\"nextButton\":\"Highlights_nextButton__l3FNr\"};","import React, { useState, useRef, useEffect } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport Utils from \"../../Util/webCofig\";\r\nimport ActionType from \"../../Store/actionType\";\r\nconst selectOneId = 6;   // HighlightsPage select2的分类ID\r\nconst selectOneId2 = 7;   // HighlightsPage select2的分类ID\r\n\r\nconst HighlightsPage = () => {\r\n    const [firstRowIndex, setFirstRowIndex] = useState(0);\r\n    const [textInit, setTextInit] = useState(null)\r\n    const [selectTwoText, setSelectTwoText] = useState([])\r\n    const [selectTwo, setSelectTwo] = useState([])\r\n\r\n    // 新增：轮播自动切换相关状态\r\n    const [isAutoPlaying, setIsAutoPlaying] = useState(true);\r\n    const autoPlayRef = useRef(null);\r\n // 新增：鼠标悬停暂停自动播放\r\n const handleMouseEnter = () => {\r\n    setIsAutoPlaying(false);\r\n    if (autoPlayRef.current) {\r\n        clearInterval(autoPlayRef.current);\r\n    }\r\n};\r\n\r\nconst handleMouseLeave = () => {\r\n    setIsAutoPlaying(true);\r\n};\r\n\r\n    const onGetSelectOneData = () => {\r\n        Utils.get({\r\n            url: 'api_back/resources_text/',\r\n            params: {\r\n                purpose_obj: selectOneId,\r\n                page: 1,\r\n                pagesize: 100\r\n            },\r\n            actionType: ActionType().OnGetHighlightsPageSelectOneText,\r\n            Success: (data) => {\r\n                let contentDatab = data?.results?.[0] || ''\r\n                setTextInit(contentDatab)\r\n            }\r\n        })\r\n        Utils.get({\r\n            url: 'api_back/resources_text/',\r\n            params: {\r\n                purpose_obj: selectOneId2,\r\n                page: 1,\r\n                pagesize: 100\r\n            },\r\n            actionType: ActionType().getHighlights,\r\n            Success: (data) => {\r\n                let contentDatab = data?.results || []\r\n                setSelectTwoText(contentDatab)\r\n            }\r\n        })\r\n        Utils.get({\r\n            url: 'api_back/resources_file/',\r\n            params: {\r\n                purpose_obj: selectOneId2,\r\n                page: 1,\r\n                pagesize: 100\r\n            },\r\n            actionType: ActionType().OnGetHighlightsPageSelectOneFile,\r\n            Success: (data) => {\r\n                let contentDatab = data?.results || []\r\n                setSelectTwo(contentDatab)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        onGetSelectOneData()\r\n        if (isAutoPlaying && selectTwo.length > 0) {\r\n            autoPlayRef.current = setInterval(() => {\r\n                setFirstRowIndex(prev => (prev + 1) % selectTwo.length);\r\n            }, 3000);\r\n        }\r\n\r\n        return () => {\r\n            if (autoPlayRef.current) {\r\n                clearInterval(autoPlayRef.current);\r\n            }\r\n        };\r\n    }, [isAutoPlaying, selectTwo.length])\r\n\r\n\r\n    return (\r\n        <div className={styles.highlightsContainer}>\r\n            <div className={styles.header}>\r\n                <h1 className={styles.title}>{textInit?.text}</h1>\r\n                <p className={styles.subtitle}\r\n                    dangerouslySetInnerHTML={{ __html: textInit?.sub_text }}\r\n                />\r\n            </div>\r\n\r\n            <div className={styles.carouselContainer}>\r\n\r\n                <div className={styles.carouselContainer}>\r\n                    {/* 轮播组件 */}\r\n                    <div className={styles.carouselWrapper}>\r\n                        <div className={styles.carouselTrack}\r\n                        onMouseEnter={handleMouseEnter}\r\n                        onMouseLeave={handleMouseLeave}\r\n                        >\r\n                            {selectTwo.map((item, index) => (\r\n                                <div\r\n                                    key={index}\r\n                                    className={`${styles.carouselSlide} ${index === firstRowIndex ? styles.activeSlide : ''}`}\r\n                                    style={{ transform: `translateX(-${firstRowIndex * 100}%)` }}\r\n                                >\r\n                                    <div className={styles.slideContent}>\r\n                                        <div className={styles.slideImage}>\r\n                                            <img\r\n                                                src={Utils.returnFileUrl(item?.abs_file_obj_display)}\r\n                                                alt={item.remark || 'Slide image'}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={styles.slideText}>\r\n                                            <h3 className={styles.slideTitle}>\r\n                                                {selectTwoText?.[index]?.text || '--'}\r\n                                            </h3>\r\n                                            <p className={styles.slideDescription}\r\n                                            dangerouslySetInnerHTML={{ __html: selectTwoText?.[index]?.sub_text || '--------' }}\r\n                                            />\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        {/* 导航圆圈 */}\r\n                        <div className={styles.carouselDots}>\r\n                            {selectTwo.map((_, index) => (\r\n                                <button\r\n                                    key={index}\r\n                                    className={`${styles.dot} ${index === firstRowIndex ? styles.activeDot : ''}`}\r\n                                    onClick={() => setFirstRowIndex(index)}\r\n                                    aria-label={`Go to slide ${index + 1}`}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n\r\n                        {/* 左右导航按钮 */}\r\n                        <button\r\n                            className={`${styles.carouselNav} ${styles.prevNav}`}\r\n                            onClick={() => setFirstRowIndex(firstRowIndex-1)}\r\n                            disabled={firstRowIndex===0}\r\n                            aria-label=\"Previous slide\"\r\n                        >\r\n                            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <path d=\"M15 18l-6-6 6-6\" />\r\n                            </svg>\r\n                        </button>\r\n                        <button\r\n                            className={`${styles.carouselNav} ${styles.nextNav}`}\r\n                            onClick={() => setFirstRowIndex(firstRowIndex+1)}\r\n                            aria-label=\"Next slide\"\r\n                            disabled={(selectTwo.length-1)===firstRowIndex}\r\n                        >\r\n                            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                                <path d=\"M9 18l6-6-6-6\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {/* 第一行轮播 */}\r\n                {/* <div className={styles.rowContainer}>\r\n                    <button\r\n                        className={`${styles.navigationButton} ${styles.prevButton}`}\r\n                        onClick={prevSlideFirst}\r\n                        aria-label=\"第一行上一页\"\r\n                    >\r\n                        <svg className={styles.arrowIcon} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                            <path d=\"M15 18l-6-6 6-6\" />\r\n                        </svg>\r\n                    </button>\r\n\r\n                    <div\r\n                        ref={firstRowRef}\r\n                        className={styles.carouselRow}\r\n                        onMouseDown={(e) => handleMouseDown(e, 'first')}\r\n                        onMouseMove={handleMouseMove}\r\n                        onMouseUp={handleMouseUp}\r\n                        onMouseLeave={handleMouseUp}\r\n                        onTouchStart={(e) => handleTouchStart(e, 'first')}\r\n                        onTouchMove={handleTouchMove}\r\n                        onTouchEnd={handleTouchEnd}\r\n                        style={{ cursor: isDragging && activeRow === 'first' ? 'grabbing' : 'grab' }}\r\n                    >\r\n                        {infiniteProperties.map((property, index) => (\r\n                            <div key={`first-${property.id}-${index}`} className={`${styles.propertyCard} ${styles.propertyCardWidthOne}`}>\r\n                                <div className={styles.imageContainer}>\r\n                                    <img\r\n                                        src={Utils.returnFileUrl(property?.abs_file_obj_display)}\r\n                                        alt={property.remark}\r\n                                        className={styles.propertyImage}\r\n                                        loading=\"lazy\"\r\n                                        draggable={false}\r\n                                    />\r\n                                    <div className={styles.propertyName}>\r\n                                        {property.remark}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <button\r\n                        className={`${styles.navigationButton} ${styles.nextButton}`}\r\n                        onClick={nextSlideFirst}\r\n                        aria-label=\"第一行下一页\"\r\n                    >\r\n                        <svg className={styles.arrowIcon} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                            <path d=\"M9 18l6-6-6-6\" />\r\n                        </svg>\r\n                    </button>\r\n                </div> */}\r\n\r\n                {/* 第二行轮播 - 错位半个图片宽度 */}\r\n                {/* <div className={`${styles.rowContainer} ${styles.secondRowContainer}`}>\r\n                    <button\r\n                        className={`${styles.navigationButton} ${styles.prevButton}`}\r\n                        onClick={prevSlideSecond}\r\n                        aria-label=\"第二行上一页\"\r\n                    >\r\n                        <svg className={styles.arrowIcon} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                            <path d=\"M15 18l-6-6 6-6\" />\r\n                        </svg>\r\n                    </button>\r\n\r\n                    <div\r\n                        ref={secondRowRef}\r\n                        className={`${styles.carouselRow}`}\r\n                        onMouseDown={(e) => handleMouseDown(e, 'second')}\r\n                        onMouseMove={handleMouseMove}\r\n                        onMouseUp={handleMouseUp}\r\n                        onMouseLeave={handleMouseUp}\r\n                        onTouchStart={(e) => handleTouchStart(e, 'second')}\r\n                        onTouchMove={handleTouchMove}\r\n                        onTouchEnd={handleTouchEnd}\r\n                        style={{ cursor: isDragging && activeRow === 'second' ? 'grabbing' : 'grab' }}\r\n                    >\r\n                        {infiniteProperties1.map((property, index) => (\r\n                            <div key={`second-${property.id}-${index}`} className={`${styles.propertyCard}  ${styles.imageContainerTran}`}>\r\n                                <div className={`${styles.imageContainer}`}>\r\n                                    <img\r\n                                        src={Utils.returnFileUrl(property?.abs_file_obj_display)}\r\n                                        alt={property.remark}\r\n                                        className={styles.propertyImage}\r\n                                        loading=\"lazy\"\r\n                                        draggable={false}\r\n                                    />\r\n                                    <div className={styles.propertyName}>\r\n                                        {property.remark}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <button\r\n                        className={`${styles.navigationButton} ${styles.nextButton}`}\r\n                        onClick={nextSlideSecond}\r\n                        aria-label=\"第二行下一页\"\r\n                    >\r\n                        <svg className={styles.arrowIcon} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                            <path d=\"M9 18l6-6-6-6\" />\r\n                        </svg>\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HighlightsPage;"],"names":["HighlightsPage","firstRowIndex","setFirstRowIndex","useState","textInit","setTextInit","selectTwoText","setSelectTwoText","selectTwo","setSelectTwo","isAutoPlaying","setIsAutoPlaying","autoPlayRef","useRef","useEffect","Utils","get","url","params","purpose_obj","page","pagesize","actionType","ActionType","OnGetHighlightsPageSelectOneText","Success","data","_data$results","contentDatab","results","getHighlights","OnGetHighlightsPageSelectOneFile","length","current","setInterval","prev","clearInterval","_jsxs","className","styles","highlightsContainer","children","header","_jsx","title","text","subtitle","dangerouslySetInnerHTML","__html","sub_text","carouselContainer","carouselWrapper","carouselTrack","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","map","item","index","_selectTwoText$index","_selectTwoText$index2","concat","carouselSlide","activeSlide","style","transform","slideContent","slideImage","src","returnFileUrl","abs_file_obj_display","alt","remark","slideText","slideTitle","slideDescription","carouselDots","_","dot","activeDot","onClick","carouselNav","prevNav","disabled","viewBox","fill","stroke","strokeWidth","d","nextNav"],"sourceRoot":""}