{"version":3,"file":"static/js/411.1d470219.chunk.js","mappings":"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","sources":["webpack://webapp/./src/Page/UserInfo/index.module.css?d05b","Page/UserInfo/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"UserInfoPage\":\"UserInfo_UserInfoPage__e810E\",\"layout\":\"UserInfo_layout__zZ4UQ\",\"sideMenu\":\"UserInfo_sideMenu__a3RFU\",\"menuItem\":\"UserInfo_menuItem__OYe7J\",\"active\":\"UserInfo_active__VyX9j\",\"arrow\":\"UserInfo_arrow__y3enO\",\"content\":\"UserInfo_content__rGOx-\",\"section\":\"UserInfo_section__4H76F\",\"headerBar\":\"UserInfo_headerBar__femp9\",\"title\":\"UserInfo_title__iQeDo\",\"sub\":\"UserInfo_sub__AnKl3\",\"link\":\"UserInfo_link__ga2a4\",\"profileTop\":\"UserInfo_profileTop__48vwc\",\"leftIntro\":\"UserInfo_leftIntro__iCeAX\",\"nameBlock\":\"UserInfo_nameBlock__7EIAT\",\"name\":\"UserInfo_name__f0+if\",\"location\":\"UserInfo_location__wQ8XV\",\"fieldList\":\"UserInfo_fieldList__EjPt4\",\"fieldRow\":\"UserInfo_fieldRow__KGF-3\",\"fieldLabel\":\"UserInfo_fieldLabel__6Dvvb\",\"fieldValue\":\"UserInfo_fieldValue__EvUrJ\",\"primaryBtn\":\"UserInfo_primaryBtn__lyv1k\",\"card\":\"UserInfo_card__aT8Tp\",\"metaGrid\":\"UserInfo_metaGrid__Fdt8f\",\"metaLabel\":\"UserInfo_metaLabel__RoiiM\",\"metaValue\":\"UserInfo_metaValue__kFyBp\",\"blockTitle\":\"UserInfo_blockTitle__ToraI\",\"inlineForm\":\"UserInfo_inlineForm__XlPlI\",\"modalActions\":\"UserInfo_modalActions__y9IEl\",\"avatarClickable\":\"UserInfo_avatarClickable__6v477\",\"avatarModal\":\"UserInfo_avatarModal__ZVD2q\",\"cropperBody\":\"UserInfo_cropperBody__vSO+J\",\"emptyUploader\":\"UserInfo_emptyUploader__IKNl4\",\"cropBox\":\"UserInfo_cropBox__vJJzx\",\"cropImage\":\"UserInfo_cropImage__8Z677\",\"cropMask\":\"UserInfo_cropMask__vEYyq\",\"controls\":\"UserInfo_controls__Me8N2\",\"scaleRow\":\"UserInfo_scaleRow__CqsM6\",\"scaleLabel\":\"UserInfo_scaleLabel__U5cu9\",\"scaleSlider\":\"UserInfo_scaleSlider__UjZ3b\",\"actionRow\":\"UserInfo_actionRow__1yNl1\"};","import React, { useEffect, useMemo, useState, useRef } from \"react\";\r\nimport style from './index.module.css';\r\nimport { Avatar, Button, Form, Input, DatePicker, Modal, message, Slider, Radio } from 'antd';\r\nimport Utils from \"../../Util/webCofig\";\r\nimport ActionType from \"../../Store/actionType\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst MENU = {\r\n    PROFILE: 'profile',\r\n    PASSWORD: 'password',\r\n    PREFERENCES: 'preferences',\r\n    MEMBERSHIP: 'membership',\r\n    SIGNOUT: 'signout'\r\n};\r\n\r\nfunction readUserFromStorage() {\r\n    try {\r\n        const raw = localStorage.getItem('userInfo');\r\n        if (!raw) return null;\r\n        return JSON.parse(raw);\r\n    } catch { return null; }\r\n}\r\n\r\nfunction toInitialProfile() {\r\n    const stored = readUserFromStorage();\r\n    const info = stored?.user_info || {};\r\n    return {\r\n        username: info.username || 'Member',\r\n        name: info.name || 'Accezz',\r\n        avatar: info.cover || null,\r\n        location: info.location || '—',\r\n        date_of_birth: info.date_of_birth || null,\r\n        address: info.address || '',\r\n        phone: info.phone || ''\r\n    };\r\n}\r\n\r\nconst UserInfoPage = () => {\r\n    const [active, setActive] = useState(MENU.PROFILE);\r\n    const [profile, setProfile] = useState(toInitialProfile());\r\n    const [editOpen, setEditOpen] = useState(false);\r\n    const [pwdOpen, setPwdOpen] = useState(false);\r\n\r\n    // 头像裁剪弹窗与状态\r\n    const [avatarOpen, setAvatarOpen] = useState(false);\r\n    const [rawImageSrc, setRawImageSrc] = useState(null);\r\n    const [scale, setScale] = useState(1);\r\n    const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n    const dragStateRef = useRef({ dragging: false, startX: 0, startY: 0, originX: 0, originY: 0 });\r\n    const pinchRef = useRef({ startDistance: 0, startScale: 1 });\r\n    const imgRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n    const cropBoxRef = useRef(null);\r\n\r\n    const onGetUserInfo = () => {\r\n        Utils.get({\r\n            url: 'api_v1/user/-1/',\r\n            actionType: ActionType().GetUserInfo,\r\n            Success: (data) => {\r\n                setProfile((prev) => ({ ...prev, ...data }))\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        setProfile(toInitialProfile());\r\n        onGetUserInfo()\r\n    }, []);\r\n\r\n    // 修改用户信息\r\n\r\n    const handleEditSubmit = (values) => {\r\n        /* 打印提交字段 */\r\n        // 合并默认值\r\n        const submitted = { ...values };\r\n\r\n        // 控制台输出\r\n        // eslint-disable-next-line no-console\r\n        // console.log('profile_update', submitted);\r\n\r\n        Utils.patch({\r\n            url: '/api_v1/user/-1/',\r\n            data: submitted,\r\n            actionType: ActionType().PatchUserInfo,\r\n            Success: () => {\r\n                onGetUserInfo()\r\n                setProfile(prev => ({ ...prev, ...values }));\r\n                message.success('√');\r\n            }\r\n        })\r\n        setEditOpen(false);\r\n\r\n    };\r\n\r\n    const handlePwdSubmit = (values) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('change_password', values);\r\n        Utils.post({\r\n            url: 'programmer/set_password/',\r\n            data: values,\r\n            actionType: ActionType().postPassword,\r\n            Success: (data) => {\r\n                message.success('Password changed successfully, please log in again √ ')\r\n                Utils.LogOut()\r\n            },\r\n            Error: () => {\r\n                message.error('X')\r\n            }\r\n        })\r\n        setPwdOpen(false);\r\n    };\r\n\r\n    const handleProposeSubmit = (values) => {\r\n        // eslint-disable-next-line no-console\r\n        // console.log('propose_member', values);\r\n        message.success('This feature is not yet complete');\r\n    };\r\n\r\n    const signOut = () => {\r\n        localStorage.clear();\r\n        window.location.reload(true);\r\n    };\r\n\r\n    // 头像相关逻辑\r\n    const onOpenAvatar = () => {\r\n        setAvatarOpen(true);\r\n    };\r\n\r\n    const onPickFile = () => {\r\n        fileInputRef.current?.click();\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n        const file = e.target.files?.[0];\r\n        if (!file) return;\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            setRawImageSrc(reader.result);\r\n            setScale(1);\r\n            setOffset({ x: 0, y: 0 });\r\n        };\r\n        reader.readAsDataURL(file);\r\n        // 重置 input 以便可再次选择相同文件\r\n        e.target.value = '';\r\n    };\r\n\r\n    const startDrag = (clientX, clientY) => {\r\n        dragStateRef.current = {\r\n            dragging: true,\r\n            startX: clientX,\r\n            startY: clientY,\r\n            originX: offset.x,\r\n            originY: offset.y\r\n        };\r\n    };\r\n\r\n    const onMouseDown = (e) => {\r\n        e.preventDefault();\r\n        startDrag(e.clientX, e.clientY);\r\n    };\r\n\r\n    const onTouchStart = (e) => {\r\n        const touches = e.touches;\r\n        if (touches.length === 1) {\r\n            // 单指触摸 - 拖拽\r\n            const t = touches[0];\r\n            startDrag(t.clientX, t.clientY);\r\n        } else if (touches.length === 2) {\r\n            // 双指触摸 - 缩放\r\n            const t1 = touches[0];\r\n            const t2 = touches[1];\r\n            const distance = Math.sqrt(\r\n                Math.pow(t2.clientX - t1.clientX, 2) +\r\n                Math.pow(t2.clientY - t1.clientY, 2)\r\n            );\r\n            pinchRef.current = { startDistance: distance, startScale: scale };\r\n        }\r\n    };\r\n\r\n    const doDrag = (clientX, clientY) => {\r\n        const ds = dragStateRef.current;\r\n        if (!ds.dragging) return;\r\n        const dx = clientX - ds.startX;\r\n        const dy = clientY - ds.startY;\r\n\r\n        setOffset({ x: ds.originX + dx, y: ds.originY + dy });\r\n\r\n\r\n\r\n        // // // 计算边界限制\r\n        // const boxSize = cropBoxRef.current?.clientWidth || 320;\r\n        // const img = imgRef.current;\r\n        // if(!img) return;\r\n\r\n        // // 图片实际渲染尺寸\r\n        // const naturalW = img.naturalWidth;\r\n        // const naturalH = img.naturalHeight;\r\n        // const baseScale = Math.max(boxSize / naturalW, boxSize / naturalH);\r\n        // const renderScale = baseScale * scale;\r\n        // const renderW = naturalW * renderScale;\r\n        // const renderH = naturalH * renderScale;\r\n\r\n        // // // 计算边界：图片边缘不能超出裁剪框\r\n        // const maxOffsetX = Math.max(0, (renderW - boxSize) / 2);\r\n        // const maxOffsetY = Math.max(0, (renderH - boxSize) / 2);\r\n\r\n        // // 应用边界限制\r\n        // const newX = clamp(ds.originX + dx, -maxOffsetX, maxOffsetX);\r\n        // const newY = clamp(ds.originY + dy, -maxOffsetY, maxOffsetY);\r\n\r\n        // setOffset({ x: newX, y: newY });\r\n    };\r\n\r\n    const onMouseMove = (e) => {\r\n        doDrag(e.clientX, e.clientY);\r\n    };\r\n\r\n    const onTouchMove = (e) => {\r\n        const touches = e.touches;\r\n        if (touches.length === 1) {\r\n            // 单指触摸 - 拖拽\r\n            const t = touches[0];\r\n            doDrag(t.clientX, t.clientY);\r\n        } else if (touches.length === 2) {\r\n            // 双指触摸 - 缩放\r\n            const t1 = touches[0];\r\n            const t2 = touches[1];\r\n            const distance = Math.sqrt(\r\n                Math.pow(t2.clientX - t1.clientX, 2) +\r\n                Math.pow(t2.clientY - t1.clientY, 2)\r\n            );\r\n\r\n            const { startDistance, startScale } = pinchRef.current;\r\n            if (startDistance > 0) {\r\n                const scaleRatio = distance / startDistance;\r\n                const newScale = clamp(startScale * scaleRatio, 0.5, 4);\r\n                setScale(newScale);\r\n\r\n                // 缩放后重新计算边界限制\r\n                if (imgRef.current && cropBoxRef.current) {\r\n                    const boxSize = cropBoxRef.current.clientWidth;\r\n                    const img = imgRef.current;\r\n                    const naturalW = img.naturalWidth;\r\n                    const naturalH = img.naturalHeight;\r\n                    const baseScale = Math.max(boxSize / naturalW, boxSize / naturalH);\r\n                    const renderScale = baseScale * newScale;\r\n                    const renderW = naturalW * renderScale;\r\n                    const renderH = naturalH * renderScale;\r\n\r\n                    const maxOffsetX = Math.max(0, (renderW - boxSize) / 2);\r\n                    const maxOffsetY = Math.max(0, (renderH - boxSize) / 2);\r\n\r\n                    setOffset(prev => ({\r\n                        x: clamp(prev.x, -maxOffsetX, maxOffsetX),\r\n                        y: clamp(prev.y, -maxOffsetY, maxOffsetY)\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const stopDrag = () => {\r\n        dragStateRef.current.dragging = false;\r\n    };\r\n\r\n    const clamp = (val, min, max) => Math.max(min, Math.min(max, val));\r\n\r\n    // 鼠标滚轮缩放处理\r\n    const onWheel = (e) => {\r\n        e.preventDefault();\r\n        const delta = e.deltaY > 0 ? -0.1 : 0.1;\r\n        const newScale = clamp(scale + delta, 0.5, 4);\r\n        setScale(newScale);\r\n\r\n        // 缩放后重新计算边界限制\r\n        if (imgRef.current && cropBoxRef.current) {\r\n            const boxSize = cropBoxRef.current.clientWidth;\r\n            const img = imgRef.current;\r\n            const naturalW = img.naturalWidth;\r\n            const naturalH = img.naturalHeight;\r\n            const baseScale = Math.max(boxSize / naturalW, boxSize / naturalH);\r\n            const renderScale = baseScale * newScale;\r\n            const renderW = naturalW * renderScale;\r\n            const renderH = naturalH * renderScale;\r\n\r\n            const maxOffsetX = Math.max(0, (renderW - boxSize) / 2);\r\n            const maxOffsetY = Math.max(0, (renderH - boxSize) / 2);\r\n\r\n            setOffset(prev => ({\r\n                x: clamp(prev.x, -maxOffsetX, maxOffsetX),\r\n                y: clamp(prev.y, -maxOffsetY, maxOffsetY)\r\n            }));\r\n        }\r\n    };\r\n\r\n    const performCrop = () => {\r\n        const img = imgRef.current;\r\n        const box = cropBoxRef.current;\r\n        if (!img || !box) return null;\r\n\r\n        const boxSize = box.clientWidth; // 方形\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = boxSize;\r\n        canvas.height = boxSize;\r\n        const ctx = canvas.getContext('2d');\r\n        if (!ctx) return null;\r\n\r\n        // 图片实际渲染尺寸\r\n        const naturalW = img.naturalWidth;\r\n        const naturalH = img.naturalHeight;\r\n\r\n        // 渲染到容器内时的目标宽高（以容器为基准的缩放）\r\n        // 让图片较短的一边正好与裁剪框同尺寸，再乘以 scale\r\n        const baseScale = Math.max(boxSize / naturalW, boxSize / naturalH);\r\n        const renderScale = baseScale * scale;\r\n        const renderW = naturalW * renderScale;\r\n        const renderH = naturalH * renderScale;\r\n\r\n        // 图片左上角相对裁剪框中心的偏移\r\n        const centerX = boxSize / 2 + offset.x;\r\n        const centerY = boxSize / 2 + offset.y;\r\n        const drawX = centerX - renderW / 2;\r\n        const drawY = centerY - renderH / 2;\r\n\r\n        ctx.clearRect(0, 0, boxSize, boxSize);\r\n        ctx.drawImage(img, drawX, drawY, renderW, renderH);\r\n        return canvas.toDataURL('image/png');\r\n    };\r\n    // 修改头像\r\n    const onSubmitAvatar = () => {\r\n        const dataUrl = performCrop();\r\n        if (!dataUrl) {\r\n            message.error('裁剪失败，请重试');\r\n            return;\r\n        }\r\n        // 将 base64 转换为二进制数据\r\n        const base64Data = dataUrl.split(',')[1]; // 移除 data:image/xxx;base64, 前缀\r\n        const binaryString = atob(base64Data);\r\n        const bytes = new Uint8Array(binaryString.length);\r\n        for (let i = 0; i < binaryString.length; i++) {\r\n            bytes[i] = binaryString.charCodeAt(i);\r\n        }\r\n\r\n        // 创建 Blob 对象\r\n        const blob = new Blob([bytes], { type: 'image/jpeg' });\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"cover\", blob, \"avatar.jpg\"); // 使用二进制 blob  \r\n        Utils.post({\r\n            url: \"programmer/set_password/\",\r\n            data: formData,\r\n            actionType: ActionType().PostUserCover,\r\n            Success: (data) => {\r\n                let stored = readUserFromStorage();\r\n                let userSub = {\r\n                    ...stored.user_info,\r\n                    cover: data.src\r\n                }\r\n                stored['user_info'] = userSub\r\n                localStorage.setItem(\"userInfo\", JSON.stringify(stored));\r\n                // 更新页面状态，立即显示新头像\r\n                setProfile(prev => ({ ...prev, avatar: data.src }));\r\n\r\n                // 触发自定义事件，通知 Header 组件更新头像\r\n                window.dispatchEvent(new CustomEvent('userAvatarUpdated', {\r\n                    detail: { avatar: data.src }\r\n                }));\r\n            },\r\n            Error: (data) => {\r\n                console.log(data)\r\n            }\r\n        })\r\n        // eslint-disable-next-line no-console\r\n        console.log('submit_avatar', { avatarDataUrl: dataUrl });\r\n        message.success('已打印到控制台');\r\n        setAvatarOpen(false);\r\n    };\r\n    //左侧菜单栏\r\n    const SideMenu = useMemo(() => (\r\n        <aside className={style.sideMenu}>\r\n            <div className={active === MENU.PROFILE ? `${style.menuItem} ${style.active}` : style.menuItem} onClick={() => setActive(MENU.PROFILE)}>\r\n                <span>Profile</span>\r\n                <span className={style.arrow}>›</span>\r\n            </div>\r\n            <div className={active === MENU.PASSWORD ? `${style.menuItem} ${style.active}` : style.menuItem} onClick={() => setActive(MENU.PASSWORD)}>\r\n                <span>Change password</span>\r\n                <span className={style.arrow}>›</span>\r\n            </div>\r\n            <div className={active === MENU.PREFERENCES ? `${style.menuItem} ${style.active}` : style.menuItem} onClick={() => setActive(MENU.PREFERENCES)}>\r\n                <span>Preferences</span>\r\n                <span className={style.arrow}>›</span>\r\n            </div>\r\n            <div className={active === MENU.MEMBERSHIP ? `${style.menuItem} ${style.active}` : style.menuItem} onClick={() => setActive(MENU.MEMBERSHIP)}>\r\n                <span>Membership application</span>\r\n                <span className={style.arrow}>›</span>\r\n            </div>\r\n            <div className={style.menuItem} onClick={signOut}>\r\n                <span>Sign out</span>\r\n                <span className={style.arrow}>›</span>\r\n            </div>\r\n        </aside>\r\n    ), [active]);\r\n    // 密码强度验证正则：至少包含大小写字母、数字和特殊字符中的三种\r\n    const passwordStrengthRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n    // 纯数字验证\r\n    const onlyNumberRegex = /^\\d+$/;\r\n    // 纯字母验证\r\n    const onlyLetterRegex = /^[a-zA-Z]+$/;\r\n    return (\r\n        <div className={style.UserInfoPage}>\r\n\r\n            <div className={style.layout}>\r\n                {SideMenu}\r\n                <main className={style.content}>\r\n                    {active === MENU.PROFILE && (\r\n                        <section className={style.section}>\r\n                            <header className={style.headerBar}>\r\n                                <h2 className={style.title}>Profile</h2>\r\n                                <p className={style.sub}>Here you can edit your phone number and email address. This information is not visible to others. If you need to amend your personal details please get in touch. <a className={style.link} href=\"#\">Contact us</a></p>\r\n                            </header>\r\n\r\n                            <div className={style.profileTop}>\r\n                                <div className={style.leftIntro}>\r\n                                    <div className={style.avatarClickable} onClick={onOpenAvatar} title=\"点击更换头像\">\r\n                                        <Avatar size={80} src={Utils.returnFileUrl(profile.avatar)} >{profile.username?.[0]}</Avatar>\r\n                                    </div>\r\n                                    <div className={style.nameBlock}>\r\n                                        <div className={style.name}>{profile.username}</div>\r\n                                        <div className={style.location}>Location: {profile.location || '—'}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={style.fieldList}>\r\n                                <div className={style.fieldRow}>\r\n                                    <div className={style.fieldLabel}>Name</div>\r\n                                    <div className={style.fieldValue}>{profile.name}</div>\r\n                                </div>\r\n                                <div className={style.fieldRow}>\r\n                                    <div className={style.fieldLabel}>Birthday</div>\r\n                                    <div className={style.fieldValue}>{profile.date_of_birth || '—'}</div>\r\n                                </div>\r\n                                <div className={style.fieldRow}>\r\n                                    <div className={style.fieldLabel}>Location</div>\r\n                                    <div className={style.fieldValue}>{profile.location || '—'}</div>\r\n                                </div>\r\n                                <div className={style.fieldRow}>\r\n                                    <div className={style.fieldLabel}>Phone</div>\r\n                                    <div className={style.fieldValue}>{profile.phone || '—'}</div>\r\n                                </div>\r\n                                <div className={style.fieldRow}>\r\n                                    <div className={style.fieldLabel}>Gender</div>\r\n                                    <div className={style.fieldValue}>{profile.gender || '—'}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Button className={style.primaryBtn} onClick={() => setEditOpen(true)}>Edit information</Button>\r\n\r\n                            <Modal\r\n                                title=\"Edit profile\"\r\n                                open={editOpen}\r\n                                onCancel={() => setEditOpen(false)}\r\n                                footer={null}\r\n                                destroyOnClose\r\n                            >\r\n                                <Form layout=\"vertical\" initialValues={profile} onFinish={handleEditSubmit}>\r\n                                    <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: 'Please enter your name' }]}>\r\n                                        <Input placeholder=\"name\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Date of birth\"\r\n                                        name=\"date_of_birth\"\r\n                                        getValueProps={(value) => ({ value: value ? dayjs(value) : null })}\r\n                                        normalize={(value) => value ? dayjs(value).format('YYYY-MM-DD') : null}\r\n                                    >\r\n                                        <DatePicker style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Location\" name=\"location\">\r\n                                        <Input placeholder=\"location\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Phone\" name=\"phone\">\r\n                                        <Input placeholder=\"Phone\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Gender\" name=\"gender\">\r\n                                        <Radio.Group>\r\n                                            <Radio value=\"Female\"> Female </Radio>\r\n                                            <Radio value=\"Male\"> Male </Radio>\r\n                                            <Radio value=\"Other\"> Other </Radio>\r\n                                        </Radio.Group>\r\n                                    </Form.Item>\r\n                                    <div className={style.modalActions}>\r\n                                        <Button onClick={() => setEditOpen(false)}>Cancel</Button>\r\n                                        <Button type=\"primary\" htmlType=\"submit\">Save</Button>\r\n                                    </div>\r\n                                </Form>\r\n                            </Modal>\r\n\r\n                            {/* 更换头像弹窗 */}\r\n                            <Modal\r\n                                title=\"Change avatar\"\r\n                                open={avatarOpen}\r\n                                onCancel={() => setAvatarOpen(false)}\r\n                                footer={null}\r\n                                destroyOnClose\r\n                                className={style.avatarModal}\r\n                            >\r\n                                <input ref={fileInputRef} type=\"file\" accept=\"image/*\" style={{ display: 'none' }} onChange={onFileChange} />\r\n                                <div className={style.cropperBody}>\r\n                                    {!rawImageSrc ? (\r\n                                        <div className={style.emptyUploader}>\r\n                                            <Button type=\"primary\" onClick={onPickFile}>选择图片</Button>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <>\r\n                                            <div\r\n                                                className={style.cropBox}\r\n                                                ref={cropBoxRef}\r\n                                                onMouseDown={onMouseDown}\r\n                                                onMouseMove={onMouseMove}\r\n                                                onMouseUp={stopDrag}\r\n                                                onMouseLeave={stopDrag}\r\n                                                onTouchStart={onTouchStart}\r\n                                                onTouchMove={onTouchMove}\r\n                                                onTouchEnd={stopDrag}\r\n                                                onWheel={onWheel}\r\n                                            >\r\n                                                <img\r\n                                                    ref={imgRef}\r\n                                                    src={rawImageSrc}\r\n                                                    alt=\"avatar\"\r\n                                                    className={style.cropImage}\r\n                                                    style={{\r\n                                                        transform: `translate(-50%, -50%) translate(${offset.x}px, ${offset.y}px) scale(${scale})`,\r\n                                                    }}\r\n                                                    draggable={false}\r\n                                                />\r\n                                                <div className={style.cropMask} />\r\n                                            </div>\r\n                                            <div className={style.controls}>\r\n                                                <div className={style.scaleRow}>\r\n                                                    <span className={style.scaleLabel}>缩放</span>\r\n                                                    <Slider\r\n                                                        className={style.scaleSlider}\r\n                                                        min={0.1}\r\n                                                        max={4}\r\n                                                        step={0.01}\r\n                                                        value={scale}\r\n                                                        onChange={(v) => {\r\n                                                            const newScale = clamp(v, 0.1, 4);\r\n                                                            setScale(newScale);\r\n\r\n                                                            // 缩放后重新计算边界限制\r\n                                                            if (imgRef.current && cropBoxRef.current) {\r\n                                                                const boxSize = cropBoxRef.current.clientWidth;\r\n                                                                const img = imgRef.current;\r\n                                                                const naturalW = img.naturalWidth;\r\n                                                                const naturalH = img.naturalHeight;\r\n                                                                const baseScale = Math.max(boxSize / naturalW, boxSize / naturalH);\r\n                                                                const renderScale = baseScale * newScale;\r\n                                                                const renderW = naturalW * renderScale;\r\n                                                                const renderH = naturalH * renderScale;\r\n\r\n                                                                const maxOffsetX = Math.max(0, (renderW - boxSize) / 2);\r\n                                                                const maxOffsetY = Math.max(0, (renderH - boxSize) / 2);\r\n\r\n                                                                setOffset(prev => ({\r\n                                                                    x: clamp(prev.x, -maxOffsetX, maxOffsetX),\r\n                                                                    y: clamp(prev.y, -maxOffsetY, maxOffsetY)\r\n                                                                }));\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className={style.actionRow}>\r\n                                                    <Button onClick={onPickFile}>重新选择</Button>\r\n                                                    <Button type=\"primary\" onClick={onSubmitAvatar}>保存头像</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            </Modal>\r\n                        </section>\r\n                    )}\r\n\r\n                    {active === MENU.PASSWORD && (\r\n                        <section className={style.section}>\r\n                            <header className={style.headerBar}>\r\n                                <h2 className={style.title}>Change password</h2>\r\n                            </header>\r\n                            <Form layout=\"vertical\" className={style.card} onFinish={handlePwdSubmit}>\r\n                                <Form.Item label=\"Current password\" name=\"old_password\" rules={[{ required: true, message: 'Please enter the current password' }]}>\r\n                                    <Input.Password placeholder=\"Current password\" />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"New password\"\r\n                                    name=\"new_password\"\r\n                                    rules={[\r\n                                        { required: true, message: 'Please enter a new password' },\r\n                                        { min: 8, message: 'Password must be at least 8 characters' },\r\n                                        { max: 20, message: 'Password cannot exceed 20 characters' },\r\n                                        // 禁止与旧密码相同\r\n                                        ({ getFieldValue }) => ({\r\n                                            validator(_, value) {\r\n                                                if (!value || getFieldValue('old_password') !== value) {\r\n                                                    return Promise.resolve();\r\n                                                }\r\n                                                return Promise.reject(new Error('New password cannot be the same as current password'));\r\n                                            },\r\n                                        }),\r\n                                        // 禁止纯数字\r\n                                        {\r\n                                            validator(_, value) {\r\n                                                if (!value || !onlyNumberRegex.test(value)) {\r\n                                                    return Promise.resolve();\r\n                                                }\r\n                                                return Promise.reject(new Error('Password cannot be all numbers'));\r\n                                            },\r\n                                        },\r\n                                        // 禁止纯字母\r\n                                        {\r\n                                            validator(_, value) {\r\n                                                if (!value || !onlyLetterRegex.test(value)) {\r\n                                                    return Promise.resolve();\r\n                                                }\r\n                                                return Promise.reject(new Error('Password cannot be all letters'));\r\n                                            },\r\n                                        },\r\n                                        // 密码强度验证（可选，根据需求调整）\r\n                                        // {\r\n                                        //     validator(_, value) {\r\n                                        //         if (!value || passwordStrengthRegex.test(value)) {\r\n                                        //             return Promise.resolve();\r\n                                        //         }\r\n                                        //         return Promise.reject(new Error('Password must include at least 3 of: uppercase, lowercase, number, special character'));\r\n                                        //     },\r\n                                        // },\r\n                                    ]}\r\n                                >\r\n                                    <Input.Password placeholder=\"New password\" />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"Confirm password\"\r\n                                    name=\"confirmPassword\"\r\n                                    dependencies={[\"new_password\"]}\r\n                                    rules={[\r\n                                        { required: true, message: 'Please confirm the password' },\r\n                                        // 添加密码一致性验证规则\r\n                                        ({ getFieldValue }) => ({\r\n                                            validator(_, value) {\r\n                                                if (!value || getFieldValue('new_password') === value) {\r\n                                                    return Promise.resolve();\r\n                                                }\r\n                                                return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                            },\r\n                                        }),\r\n                                    ]}\r\n                                >\r\n                                    <Input.Password placeholder=\"Confirm password\" />\r\n                                </Form.Item>\r\n                                <Button className={style.primaryBtn} htmlType=\"submit\">Update password</Button>\r\n                            </Form>\r\n                        </section>\r\n                    )}\r\n\r\n                    {active === MENU.MEMBERSHIP && (\r\n                        <section className={style.section}>\r\n                            <header className={style.headerBar}>\r\n                                <h2 className={style.title}>Membership application</h2>\r\n                            </header>\r\n                            <div className={style.card}>\r\n                                <div className={style.metaGrid}>\r\n                                    <div><div className={style.metaLabel}>Tier</div><div className={style.metaValue}>{profile?.tier || '--'}</div></div>\r\n                                    <div><div className={style.metaLabel}>Join date</div><div className={style.metaValue}>{profile?.joining_date || '--'}</div></div>\r\n                                    <div><div className={style.metaLabel}>Expiry</div><div className={style.metaValue}>{profile?.expiry || '--'}</div></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={style.card}>\r\n                                <div className={style.blockTitle}>Propose a new member</div>\r\n                                <Form layout=\"inline\" onFinish={handleProposeSubmit} className={style.inlineForm}>\r\n                                    <Form.Item name=\"name\" rules={[{ required: true, message: '请输入姓名' }]}>\r\n                                        <Input placeholder=\"Name\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item name=\"email\" rules={[{ required: true, message: '请输入Email' }]}>\r\n                                        <Input placeholder=\"Email\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n                        </section>\r\n                    )}\r\n\r\n                    {active === MENU.PREFERENCES && (\r\n                        <section className={style.section}>\r\n                            <header className={style.headerBar}>\r\n                                <h2 className={style.title}>Preferences</h2>\r\n                                <p className={style.sub}>You can set your basic preferences here.</p>\r\n                            </header>\r\n                            <div className={style.card}>No preferences yet.</div>\r\n                        </section>\r\n                    )}\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfoPage"],"names":["MENU","readUserFromStorage","raw","localStorage","getItem","JSON","parse","_unused","toInitialProfile","stored","info","user_info","username","name","avatar","cover","location","date_of_birth","address","phone","UserInfoPage","_profile$username","active","setActive","useState","profile","setProfile","editOpen","setEditOpen","pwdOpen","setPwdOpen","avatarOpen","setAvatarOpen","rawImageSrc","setRawImageSrc","scale","setScale","offset","setOffset","x","y","dragStateRef","useRef","dragging","startX","startY","originX","originY","pinchRef","startDistance","startScale","imgRef","fileInputRef","cropBoxRef","onGetUserInfo","Utils","get","url","actionType","ActionType","GetUserInfo","Success","data","prev","_objectSpread","useEffect","signOut","clear","window","reload","onPickFile","_fileInputRef$current","current","click","startDrag","clientX","clientY","doDrag","ds","dx","dy","stopDrag","clamp","val","min","max","Math","SideMenu","useMemo","_jsxs","className","style","children","concat","onClick","_jsx","onlyNumberRegex","onlyLetterRegex","href","onOpenAvatar","title","Avatar","size","src","returnFileUrl","gender","Button","Modal","open","onCancel","footer","destroyOnClose","Form","layout","initialValues","onFinish","values","submitted","patch","PatchUserInfo","message","success","Item","label","rules","required","Input","placeholder","getValueProps","value","dayjs","normalize","format","DatePicker","width","Radio","type","htmlType","ref","accept","display","onChange","e","_e$target$files","file","target","files","reader","FileReader","onload","result","readAsDataURL","_Fragment","onMouseDown","preventDefault","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","touches","length","t","t1","t2","distance","sqrt","pow","onTouchMove","newScale","boxSize","clientWidth","img","naturalW","naturalWidth","naturalH","naturalHeight","renderScale","renderW","renderH","maxOffsetX","maxOffsetY","onTouchEnd","onWheel","delta","deltaY","alt","transform","draggable","Slider","step","v","onSubmitAvatar","dataUrl","performCrop","box","canvas","document","createElement","height","ctx","getContext","drawX","drawY","clearRect","drawImage","toDataURL","error","base64Data","split","binaryString","atob","bytes","Uint8Array","i","charCodeAt","blob","Blob","formData","FormData","append","post","PostUserCover","userSub","setItem","stringify","dispatchEvent","CustomEvent","detail","Error","console","log","avatarDataUrl","postPassword","LogOut","Password","_ref","getFieldValue","validator","_","Promise","reject","resolve","test","dependencies","_ref2","tier","joining_date","expiry"],"sourceRoot":""}