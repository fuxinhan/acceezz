{"version":3,"file":"static/js/411.2d2af7ef.chunk.js","mappings":"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","sources":["webpack://webapp/./src/Page/UserInfo/index.module.css?d05b","Page/UserInfo/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"UserInfoPage\":\"UserInfo_UserInfoPage__e810E\",\"layout\":\"UserInfo_layout__zZ4UQ\",\"sideMenu\":\"UserInfo_sideMenu__a3RFU\",\"menuItem\":\"UserInfo_menuItem__OYe7J\",\"active\":\"UserInfo_active__VyX9j\",\"arrow\":\"UserInfo_arrow__y3enO\",\"content\":\"UserInfo_content__rGOx-\",\"section\":\"UserInfo_section__4H76F\",\"headerBar\":\"UserInfo_headerBar__femp9\",\"title\":\"UserInfo_title__iQeDo\",\"sub\":\"UserInfo_sub__AnKl3\",\"link\":\"UserInfo_link__ga2a4\",\"profileTop\":\"UserInfo_profileTop__48vwc\",\"leftIntro\":\"UserInfo_leftIntro__iCeAX\",\"nameBlock\":\"UserInfo_nameBlock__7EIAT\",\"name\":\"UserInfo_name__f0+if\",\"location\":\"UserInfo_location__wQ8XV\",\"fieldList\":\"UserInfo_fieldList__EjPt4\",\"fieldRow\":\"UserInfo_fieldRow__KGF-3\",\"fieldLabel\":\"UserInfo_fieldLabel__6Dvvb\",\"fieldValue\":\"UserInfo_fieldValue__EvUrJ\",\"primaryBtn\":\"UserInfo_primaryBtn__lyv1k\",\"card\":\"UserInfo_card__aT8Tp\",\"metaGrid\":\"UserInfo_metaGrid__Fdt8f\",\"metaLabel\":\"UserInfo_metaLabel__RoiiM\",\"metaValue\":\"UserInfo_metaValue__kFyBp\",\"blockTitle\":\"UserInfo_blockTitle__ToraI\",\"inlineForm\":\"UserInfo_inlineForm__XlPlI\",\"modalActions\":\"UserInfo_modalActions__y9IEl\",\"avatarClickable\":\"UserInfo_avatarClickable__6v477\",\"avatarModal\":\"UserInfo_avatarModal__ZVD2q\",\"cropperBody\":\"UserInfo_cropperBody__vSO+J\",\"emptyUploader\":\"UserInfo_emptyUploader__IKNl4\",\"cropBox\":\"UserInfo_cropBox__vJJzx\",\"cropImage\":\"UserInfo_cropImage__8Z677\",\"cropMask\":\"UserInfo_cropMask__vEYyq\",\"controls\":\"UserInfo_controls__Me8N2\",\"scaleRow\":\"UserInfo_scaleRow__CqsM6\",\"scaleLabel\":\"UserInfo_scaleLabel__U5cu9\",\"scaleSlider\":\"UserInfo_scaleSlider__UjZ3b\",\"actionRow\":\"UserInfo_actionRow__1yNl1\"};","import React, { useEffect, useMemo, useState, useRef } from \"react\";\r\nimport style from './index.module.css';\r\nimport { Avatar, Button, Form, Input, DatePicker, Modal, message, Slider } from 'antd';\r\n\r\nconst MENU = {\r\n    PROFILE: 'profile',\r\n    PASSWORD: 'password',\r\n    PREFERENCES: 'preferences',\r\n    MEMBERSHIP: 'membership',\r\n    SIGNOUT: 'signout'\r\n};\r\n\r\nfunction readUserFromStorage(){\r\n    try{\r\n        const raw = localStorage.getItem('userInfo');\r\n        if(!raw) return null;\r\n        return JSON.parse(raw);\r\n    }catch{ return null; }\r\n}\r\n\r\nfunction toInitialProfile(){\r\n    const stored = readUserFromStorage();\r\n    const info = stored?.user_info || {};\r\n    return {\r\n        username: info.username || 'Member',\r\n        email: info.email || 'member@example.com',\r\n        avatar: info.cover || null,\r\n        location: info.location || '—',\r\n        dateOfBirth: info.dateOfBirth || null,\r\n        address: info.address || '',\r\n        phone: info.phone || ''\r\n    };\r\n}\r\n\r\nconst UserInfoPage = ()=>{\r\n    const [active, setActive] = useState(MENU.PROFILE);\r\n    const [profile, setProfile] = useState(toInitialProfile());\r\n    const [editOpen, setEditOpen] = useState(false);\r\n    const [pwdOpen, setPwdOpen] = useState(false);\r\n\r\n    // 头像裁剪弹窗与状态\r\n    const [avatarOpen, setAvatarOpen] = useState(false);\r\n    const [rawImageSrc, setRawImageSrc] = useState(null);\r\n    const [scale, setScale] = useState(1);\r\n    const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n    const dragStateRef = useRef({ dragging:false, startX:0, startY:0, originX:0, originY:0 });\r\n    const pinchRef = useRef({ startDistance: 0, startScale: 1 });\r\n    const imgRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n    const cropBoxRef = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        setProfile(toInitialProfile());\r\n    },[]);\r\n\r\n    const handleEditSubmit = (values)=>{\r\n        /* 打印提交字段 */\r\n        // 合并默认值\r\n        const submitted = { ...profile, ...values };\r\n        // 控制台输出\r\n        // eslint-disable-next-line no-console\r\n        console.log('profile_update', submitted);\r\n        message.success('已打印到控制台');\r\n        setEditOpen(false);\r\n        setProfile(prev=>({ ...prev, ...values }));\r\n    };\r\n\r\n    const handlePwdSubmit = (values)=>{\r\n        // eslint-disable-next-line no-console\r\n        console.log('change_password', values);\r\n        message.success('已打印到控制台');\r\n        setPwdOpen(false);\r\n    };\r\n\r\n    const handleProposeSubmit = (values)=>{\r\n        // eslint-disable-next-line no-console\r\n        console.log('propose_member', values);\r\n        message.success('已打印到控制台');\r\n    };\r\n\r\n    const signOut = ()=>{\r\n        localStorage.clear();\r\n        window.location.reload(true);\r\n    };\r\n\r\n    // 头像相关逻辑\r\n    const onOpenAvatar = ()=>{\r\n        setAvatarOpen(true);\r\n    };\r\n\r\n    const onPickFile = ()=>{\r\n        fileInputRef.current?.click();\r\n    };\r\n\r\n    const onFileChange = (e)=>{\r\n        const file = e.target.files?.[0];\r\n        if(!file) return;\r\n        const reader = new FileReader();\r\n        reader.onload = ()=>{\r\n            setRawImageSrc(reader.result);\r\n            setScale(1);\r\n            setOffset({ x:0, y:0 });\r\n        };\r\n        reader.readAsDataURL(file);\r\n        // 重置 input 以便可再次选择相同文件\r\n        e.target.value = '';\r\n    };\r\n\r\n    const startDrag = (clientX, clientY)=>{\r\n        dragStateRef.current = {\r\n            dragging: true,\r\n            startX: clientX,\r\n            startY: clientY,\r\n            originX: offset.x,\r\n            originY: offset.y\r\n        };\r\n    };\r\n\r\n    const onMouseDown = (e)=>{\r\n        e.preventDefault();\r\n        startDrag(e.clientX, e.clientY);\r\n    };\r\n\r\n    const onTouchStart = (e)=>{\r\n        const touches = e.touches;\r\n        if(touches.length === 1) {\r\n            // 单指触摸 - 拖拽\r\n            const t = touches[0];\r\n            startDrag(t.clientX, t.clientY);\r\n        } else if(touches.length === 2) {\r\n            // 双指触摸 - 缩放\r\n            const t1 = touches[0];\r\n            const t2 = touches[1];\r\n            const distance = Math.sqrt(\r\n                Math.pow(t2.clientX - t1.clientX, 2) + \r\n                Math.pow(t2.clientY - t1.clientY, 2)\r\n            );\r\n            pinchRef.current = { startDistance: distance, startScale: scale };\r\n        }\r\n    };\r\n\r\n    const doDrag = (clientX, clientY)=>{\r\n        const ds = dragStateRef.current;\r\n        if(!ds.dragging) return;\r\n        const dx = clientX - ds.startX;\r\n        const dy = clientY - ds.startY;\r\n        \r\n        setOffset({ x: ds.originX + dx, y: ds.originY + dy });\r\n\r\n\r\n\r\n        // // // 计算边界限制\r\n        // const boxSize = cropBoxRef.current?.clientWidth || 320;\r\n        // const img = imgRef.current;\r\n        // if(!img) return;\r\n        \r\n        // // 图片实际渲染尺寸\r\n        // const naturalW = img.naturalWidth;\r\n        // const naturalH = img.naturalHeight;\r\n        // const baseScale = Math.max(boxSize / naturalW, boxSize / naturalH);\r\n        // const renderScale = baseScale * scale;\r\n        // const renderW = naturalW * renderScale;\r\n        // const renderH = naturalH * renderScale;\r\n        \r\n        // // // 计算边界：图片边缘不能超出裁剪框\r\n        // const maxOffsetX = Math.max(0, (renderW - boxSize) / 2);\r\n        // const maxOffsetY = Math.max(0, (renderH - boxSize) / 2);\r\n        \r\n        // // 应用边界限制\r\n        // const newX = clamp(ds.originX + dx, -maxOffsetX, maxOffsetX);\r\n        // const newY = clamp(ds.originY + dy, -maxOffsetY, maxOffsetY);\r\n        \r\n        // setOffset({ x: newX, y: newY });\r\n    };\r\n\r\n    const onMouseMove = (e)=>{\r\n        doDrag(e.clientX, e.clientY);\r\n    };\r\n\r\n    const onTouchMove = (e)=>{\r\n        const touches = e.touches;\r\n        if(touches.length === 1) {\r\n            // 单指触摸 - 拖拽\r\n            const t = touches[0];\r\n            doDrag(t.clientX, t.clientY);\r\n        } else if(touches.length === 2) {\r\n            // 双指触摸 - 缩放\r\n            const t1 = touches[0];\r\n            const t2 = touches[1];\r\n            const distance = Math.sqrt(\r\n                Math.pow(t2.clientX - t1.clientX, 2) + \r\n                Math.pow(t2.clientY - t1.clientY, 2)\r\n            );\r\n            \r\n            const { startDistance, startScale } = pinchRef.current;\r\n            if(startDistance > 0) {\r\n                const scaleRatio = distance / startDistance;\r\n                const newScale = clamp(startScale * scaleRatio, 0.5, 4);\r\n                setScale(newScale);\r\n                \r\n                // 缩放后重新计算边界限制\r\n                if(imgRef.current && cropBoxRef.current) {\r\n                    const boxSize = cropBoxRef.current.clientWidth;\r\n                    const img = imgRef.current;\r\n                    const naturalW = img.naturalWidth;\r\n                    const naturalH = img.naturalHeight;\r\n                    const baseScale = Math.max(boxSize / naturalW, boxSize / naturalH);\r\n                    const renderScale = baseScale * newScale;\r\n                    const renderW = naturalW * renderScale;\r\n                    const renderH = naturalH * renderScale;\r\n                    \r\n                    const maxOffsetX = Math.max(0, (renderW - boxSize) / 2);\r\n                    const maxOffsetY = Math.max(0, (renderH - boxSize) / 2);\r\n                    \r\n                    setOffset(prev => ({\r\n                        x: clamp(prev.x, -maxOffsetX, maxOffsetX),\r\n                        y: clamp(prev.y, -maxOffsetY, maxOffsetY)\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const stopDrag = ()=>{\r\n        dragStateRef.current.dragging = false;\r\n    };\r\n\r\n    const clamp = (val, min, max)=> Math.max(min, Math.min(max, val));\r\n\r\n    // 鼠标滚轮缩放处理\r\n    const onWheel = (e)=>{\r\n        e.preventDefault();\r\n        const delta = e.deltaY > 0 ? -0.1 : 0.1;\r\n        const newScale = clamp(scale + delta, 0.5, 4);\r\n        setScale(newScale);\r\n        \r\n        // 缩放后重新计算边界限制\r\n        if(imgRef.current && cropBoxRef.current) {\r\n            const boxSize = cropBoxRef.current.clientWidth;\r\n            const img = imgRef.current;\r\n            const naturalW = img.naturalWidth;\r\n            const naturalH = img.naturalHeight;\r\n            const baseScale = Math.max(boxSize / naturalW, boxSize / naturalH);\r\n            const renderScale = baseScale * newScale;\r\n            const renderW = naturalW * renderScale;\r\n            const renderH = naturalH * renderScale;\r\n            \r\n            const maxOffsetX = Math.max(0, (renderW - boxSize) / 2);\r\n            const maxOffsetY = Math.max(0, (renderH - boxSize) / 2);\r\n            \r\n            setOffset(prev => ({\r\n                x: clamp(prev.x, -maxOffsetX, maxOffsetX),\r\n                y: clamp(prev.y, -maxOffsetY, maxOffsetY)\r\n            }));\r\n        }\r\n    };\r\n\r\n    const performCrop = ()=>{\r\n        const img = imgRef.current;\r\n        const box = cropBoxRef.current;\r\n        if(!img || !box) return null;\r\n\r\n        const boxSize = box.clientWidth; // 方形\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = boxSize;\r\n        canvas.height = boxSize;\r\n        const ctx = canvas.getContext('2d');\r\n        if(!ctx) return null;\r\n\r\n        // 图片实际渲染尺寸\r\n        const naturalW = img.naturalWidth;\r\n        const naturalH = img.naturalHeight;\r\n\r\n        // 渲染到容器内时的目标宽高（以容器为基准的缩放）\r\n        // 让图片较短的一边正好与裁剪框同尺寸，再乘以 scale\r\n        const baseScale = Math.max(boxSize / naturalW, boxSize / naturalH);\r\n        const renderScale = baseScale * scale;\r\n        const renderW = naturalW * renderScale;\r\n        const renderH = naturalH * renderScale;\r\n\r\n        // 图片左上角相对裁剪框中心的偏移\r\n        const centerX = boxSize / 2 + offset.x;\r\n        const centerY = boxSize / 2 + offset.y;\r\n        const drawX = centerX - renderW / 2;\r\n        const drawY = centerY - renderH / 2;\r\n\r\n        ctx.clearRect(0,0,boxSize,boxSize);\r\n        ctx.drawImage(img, drawX, drawY, renderW, renderH);\r\n        return canvas.toDataURL('image/png');\r\n    };\r\n\r\n    const onSubmitAvatar = ()=>{\r\n        const dataUrl = performCrop();\r\n        if(!dataUrl){\r\n            message.error('裁剪失败，请重试');\r\n            return;\r\n        }\r\n        // eslint-disable-next-line no-console\r\n        console.log('submit_avatar', { avatarDataUrl: dataUrl });\r\n        message.success('已打印到控制台');\r\n        setProfile(prev=>({ ...prev, avatar: dataUrl }));\r\n        setAvatarOpen(false);\r\n    };\r\n\r\n    const SideMenu = useMemo(()=> (\r\n        <aside className={style.sideMenu}>\r\n            <div className={active===MENU.PROFILE?`${style.menuItem} ${style.active}`:style.menuItem} onClick={()=>setActive(MENU.PROFILE)}>\r\n                <span>Profile</span>\r\n                <span className={style.arrow}>›</span>\r\n            </div>\r\n            <div className={active===MENU.PASSWORD?`${style.menuItem} ${style.active}`:style.menuItem} onClick={()=>setActive(MENU.PASSWORD)}>\r\n                <span>Change password</span>\r\n                <span className={style.arrow}>›</span>\r\n            </div>\r\n            <div className={active===MENU.PREFERENCES?`${style.menuItem} ${style.active}`:style.menuItem} onClick={()=>setActive(MENU.PREFERENCES)}>\r\n                <span>Preferences</span>\r\n                <span className={style.arrow}>›</span>\r\n            </div>\r\n            <div className={active===MENU.MEMBERSHIP?`${style.menuItem} ${style.active}`:style.menuItem} onClick={()=>setActive(MENU.MEMBERSHIP)}>\r\n                <span>Membership application</span>\r\n                <span className={style.arrow}>›</span>\r\n            </div>\r\n            <div className={style.menuItem} onClick={signOut}>\r\n                <span>Sign out</span>\r\n                <span className={style.arrow}>›</span>\r\n            </div>\r\n        </aside>\r\n    ),[active]);\r\n\r\n    return(\r\n        <div className={style.UserInfoPage}>\r\n            <div className={style.layout}>\r\n                {SideMenu}\r\n                <main className={style.content}>\r\n                    {active===MENU.PROFILE && (\r\n                        <section className={style.section}>\r\n                            <header className={style.headerBar}>\r\n                                <h2 className={style.title}>Profile</h2>\r\n                                <p className={style.sub}>Here you can edit your phone number and email address. This information is not visible to others. If you need to amend your personal details please get in touch. <a className={style.link} href=\"#\">Contact us</a></p>\r\n                            </header>\r\n\r\n                            <div className={style.profileTop}>\r\n                                <div className={style.leftIntro}>\r\n                                    <div className={style.avatarClickable} onClick={onOpenAvatar} title=\"点击更换头像\">\r\n                                        <Avatar size={80} src={profile.avatar} >{profile.username?.[0]}</Avatar>\r\n                                    </div>\r\n                                    <div className={style.nameBlock}>\r\n                                        <div className={style.name}>{profile.username}</div>\r\n                                        <div className={style.location}>Location: {profile.location || '—'}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={style.fieldList}>\r\n                                <div className={style.fieldRow}>\r\n                                    <div className={style.fieldLabel}>Email</div>\r\n                                    <div className={style.fieldValue}>{profile.email}</div>\r\n                                </div>\r\n                                <div className={style.fieldRow}>\r\n                                    <div className={style.fieldLabel}>Date of birth</div>\r\n                                    <div className={style.fieldValue}>{profile.dateOfBirth || '—'}</div>\r\n                                </div>\r\n                                <div className={style.fieldRow}>\r\n                                    <div className={style.fieldLabel}>Address</div>\r\n                                    <div className={style.fieldValue}>{profile.address || '—'}</div>\r\n                                </div>\r\n                                <div className={style.fieldRow}>\r\n                                    <div className={style.fieldLabel}>Phone</div>\r\n                                    <div className={style.fieldValue}>{profile.phone || '—'}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Button className={style.primaryBtn} onClick={()=>setEditOpen(true)}>Edit information</Button>\r\n\r\n                            <Modal\r\n                                title=\"Edit profile\"\r\n                                open={editOpen}\r\n                                onCancel={()=>setEditOpen(false)}\r\n                                footer={null}\r\n                                destroyOnClose\r\n                            >\r\n                                <Form layout=\"vertical\" initialValues={profile} onFinish={handleEditSubmit}>\r\n                                    <Form.Item label=\"Email\" name=\"email\" rules={[{ required:true, message:'请输入邮箱' }]}>\r\n                                        <Input placeholder=\"your@email.com\"/>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Date of birth\" name=\"dateOfBirth\">\r\n                                        <DatePicker style={{ width:'100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Address\" name=\"address\">\r\n                                        <Input placeholder=\"Address\"/>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Phone\" name=\"phone\">\r\n                                        <Input placeholder=\"Phone\"/>\r\n                                    </Form.Item>\r\n                                    <div className={style.modalActions}>\r\n                                        <Button onClick={()=>setEditOpen(false)}>Cancel</Button>\r\n                                        <Button type=\"primary\" htmlType=\"submit\">Save</Button>\r\n                                    </div>\r\n                                </Form>\r\n                            </Modal>\r\n\r\n                            {/* 更换头像弹窗 */}\r\n                            <Modal\r\n                                title=\"Change avatar\"\r\n                                open={avatarOpen}\r\n                                onCancel={()=>setAvatarOpen(false)}\r\n                                footer={null}\r\n                                destroyOnClose\r\n                                className={style.avatarModal}\r\n                            >\r\n                                <input ref={fileInputRef} type=\"file\" accept=\"image/*\" style={{ display:'none' }} onChange={onFileChange} />\r\n                                <div className={style.cropperBody}>\r\n                                    {!rawImageSrc ? (\r\n                                        <div className={style.emptyUploader}>\r\n                                            <Button type=\"primary\" onClick={onPickFile}>选择图片</Button>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <>\r\n                                            <div\r\n                                                className={style.cropBox}\r\n                                                ref={cropBoxRef}\r\n                                                onMouseDown={onMouseDown}\r\n                                                onMouseMove={onMouseMove}\r\n                                                onMouseUp={stopDrag}\r\n                                                onMouseLeave={stopDrag}\r\n                                                onTouchStart={onTouchStart}\r\n                                                onTouchMove={onTouchMove}\r\n                                                onTouchEnd={stopDrag}\r\n                                                onWheel={onWheel}\r\n                                            >\r\n                                                <img\r\n                                                    ref={imgRef}\r\n                                                    src={rawImageSrc}\r\n                                                    alt=\"avatar\"\r\n                                                    className={style.cropImage}\r\n                                                    style={{\r\n                                                        transform: `translate(-50%, -50%) translate(${offset.x}px, ${offset.y}px) scale(${scale})`,\r\n                                                    }}\r\n                                                    draggable={false}\r\n                                                />\r\n                                                <div className={style.cropMask} />\r\n                                            </div>\r\n                                            <div className={style.controls}>\r\n                                                <div className={style.scaleRow}>\r\n                                                    <span className={style.scaleLabel}>缩放</span>\r\n                                                    <Slider\r\n                                                    className={style.scaleSlider}\r\n                                                    min={0.1}\r\n                                                    max={4}\r\n                                                    step={0.01}\r\n                                                    value={scale}\r\n                                                    onChange={(v)=> {\r\n                                                        const newScale = clamp(v, 0.1, 4);\r\n                                                        setScale(newScale);\r\n                                                        \r\n                                                        // 缩放后重新计算边界限制\r\n                                                        if(imgRef.current && cropBoxRef.current) {\r\n                                                            const boxSize = cropBoxRef.current.clientWidth;\r\n                                                            const img = imgRef.current;\r\n                                                            const naturalW = img.naturalWidth;\r\n                                                            const naturalH = img.naturalHeight;\r\n                                                            const baseScale = Math.max(boxSize / naturalW, boxSize / naturalH);\r\n                                                            const renderScale = baseScale * newScale;\r\n                                                            const renderW = naturalW * renderScale;\r\n                                                            const renderH = naturalH * renderScale;\r\n                                                            \r\n                                                            const maxOffsetX = Math.max(0, (renderW - boxSize) / 2);\r\n                                                            const maxOffsetY = Math.max(0, (renderH - boxSize) / 2);\r\n                                                            \r\n                                                            setOffset(prev => ({\r\n                                                                x: clamp(prev.x, -maxOffsetX, maxOffsetX),\r\n                                                                y: clamp(prev.y, -maxOffsetY, maxOffsetY)\r\n                                                            }));\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                                </div>\r\n                                                <div className={style.actionRow}>\r\n                                                    <Button onClick={onPickFile}>重新选择</Button>\r\n                                                    <Button type=\"primary\" onClick={onSubmitAvatar}>保存头像</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            </Modal>\r\n                        </section>\r\n                    )}\r\n\r\n                    {active===MENU.PASSWORD && (\r\n                        <section className={style.section}>\r\n                            <header className={style.headerBar}>\r\n                                <h2 className={style.title}>Change password</h2>\r\n                            </header>\r\n                            <Form layout=\"vertical\" className={style.card} onFinish={handlePwdSubmit}>\r\n                                <Form.Item label=\"Current password\" name=\"oldPassword\" rules={[{ required:true, message:'请输入当前密码' }]}>\r\n                                    <Input.Password placeholder=\"Current password\"/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"New password\" name=\"newPassword\" rules={[{ required:true, message:'请输入新密码' }]}>\r\n                                    <Input.Password placeholder=\"New password\"/>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Confirm password\" name=\"confirmPassword\" dependencies={[\"newPassword\"]} rules={[{ required:true, message:'请确认密码' }]}>\r\n                                    <Input.Password placeholder=\"Confirm password\"/>\r\n                                </Form.Item>\r\n                                <Button className={style.primaryBtn} htmlType=\"submit\">Update password</Button>\r\n                            </Form>\r\n                        </section>\r\n                    )}\r\n\r\n                    {active===MENU.MEMBERSHIP && (\r\n                        <section className={style.section}>\r\n                            <header className={style.headerBar}>\r\n                                <h2 className={style.title}>Membership application</h2>\r\n                            </header>\r\n                            <div className={style.card}>\r\n                                <div className={style.metaGrid}>\r\n                                    <div><div className={style.metaLabel}>Tier</div><div className={style.metaValue}>—</div></div>\r\n                                    <div><div className={style.metaLabel}>Join date</div><div className={style.metaValue}>—</div></div>\r\n                                    <div><div className={style.metaLabel}>Expiry</div><div className={style.metaValue}>—</div></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={style.card}>\r\n                                <div className={style.blockTitle}>Propose a new member</div>\r\n                                <Form layout=\"inline\" onFinish={handleProposeSubmit} className={style.inlineForm}>\r\n                                    <Form.Item name=\"name\" rules={[{ required:true, message:'请输入姓名' }]}>\r\n                                        <Input placeholder=\"Name\"/>\r\n                                    </Form.Item>\r\n                                    <Form.Item name=\"email\" rules={[{ required:true, message:'请输入Email' }]}>\r\n                                        <Input placeholder=\"Email\"/>\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n                        </section>\r\n                    )}\r\n\r\n                    {active===MENU.PREFERENCES && (\r\n                        <section className={style.section}>\r\n                            <header className={style.headerBar}>\r\n                                <h2 className={style.title}>Preferences</h2>\r\n                                <p className={style.sub}>You can set your basic preferences here.</p>\r\n                            </header>\r\n                            <div className={style.card}>No preferences yet.</div>\r\n                        </section>\r\n                    )}\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfoPage"],"names":["MENU","toInitialProfile","stored","raw","localStorage","getItem","JSON","parse","_unused","readUserFromStorage","info","user_info","username","email","avatar","cover","location","dateOfBirth","address","phone","UserInfoPage","_profile$username","active","setActive","useState","profile","setProfile","editOpen","setEditOpen","pwdOpen","setPwdOpen","avatarOpen","setAvatarOpen","rawImageSrc","setRawImageSrc","scale","setScale","offset","setOffset","x","y","dragStateRef","useRef","dragging","startX","startY","originX","originY","pinchRef","startDistance","startScale","imgRef","fileInputRef","cropBoxRef","useEffect","signOut","clear","window","reload","onPickFile","_fileInputRef$current","current","click","startDrag","clientX","clientY","doDrag","ds","dx","dy","stopDrag","clamp","val","min","max","Math","SideMenu","useMemo","_jsxs","className","style","children","concat","onClick","_jsx","href","onOpenAvatar","title","Avatar","size","src","Button","Modal","open","onCancel","footer","destroyOnClose","Form","layout","initialValues","onFinish","values","submitted","_objectSpread","console","log","message","success","prev","Item","label","name","rules","required","Input","placeholder","DatePicker","width","type","htmlType","ref","accept","display","onChange","e","_e$target$files","file","target","files","reader","FileReader","onload","result","readAsDataURL","value","_Fragment","onMouseDown","preventDefault","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","touches","length","t","t1","t2","distance","sqrt","pow","onTouchMove","newScale","boxSize","clientWidth","img","naturalW","naturalWidth","naturalH","naturalHeight","renderScale","renderW","renderH","maxOffsetX","maxOffsetY","onTouchEnd","onWheel","delta","deltaY","alt","transform","draggable","Slider","step","v","onSubmitAvatar","dataUrl","performCrop","box","canvas","document","createElement","height","ctx","getContext","drawX","drawY","clearRect","drawImage","toDataURL","avatarDataUrl","error","Password","dependencies"],"sourceRoot":""}